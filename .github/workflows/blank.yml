name: Main
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: 00 16 * * *
  watch:
    types: [started]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-flutter-engine:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@v4
      with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-haskell: 'true'
          remove-android: 'true'
    - name: Checkout
      uses: actions/checkout@v2
    - name: Echo Free space
      run: |
          echo "Free space:"
          df -h
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10' 
    - name: Get Resource
      run: |
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
        export PATH="$PATH:$PWD/depot_tools"
        mkdir dart-sdk
        cd dart-sdk
        fetch dart
        cd sdk
        git checkout master
        ls
        sed -i "s#/data/local/tmp#/data/data/com.termux/files/home/tmp#g" runtime/bin/directory_android.cc
        sed -n '431,433p' runtime/bin/directory_android.cc
        cd ../
        echo "target_os = ['android','linux']" >> .gclient
        gclient sync
    - name: tar source
      run: |
        tar -zcvf dart-sdk.tar.gz dart-sdk/
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
    - name: Release Engine
      uses: ncipollo/release-action@v1
      with:
        artifacts: "dart-sdk.tar.gz"
        tag: Flutter-ARM64
        token: ${{ secrets.GITHUB_TOKEN }}
        allowUpdates: true
